# This Cloudformation template needs to be revised to be more flexible
# Right now it creates a VPC, a bastion host and an EKS with private subnet but
# it doesn't add any security group or routes to AWS services like S3, ECR, etc.

---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  KeyName:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: 'Name of an existing EC2 KeyPair for SSH access to the bastion host'
  InstanceType:
    Type: 'String'
    Default: 't2.micro'
    AllowedValues:
      - 't2.micro'
      - 't2.small'
      - 't2.medium'
    Description: 'EC2 instance type for the bastion host'
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: 'Name'
          Value: 'my-vpc'
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.1.0/24'
      MapPublicIpOnLaunch: 'false'
      AvailabilityZone: !Select ['0', !GetAZs '']
      Tags:
        - Key: 'Name'
          Value: 'my-private-subnet-1'
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.2.0/24'
      MapPublicIpOnLaunch: 'false'
      AvailabilityZone: !Select ['1', !GetAZs '']
      Tags:
        - Key: 'Name'
          Value: 'my-private-subnet-2'
  BastionSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for bastion host'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: 'Name'
          Value: 'my-bastion-sg'
  BastionHost:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: 'ami-0c94855ba95c71c99'
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId: !Ref PrivateSubnet1
          GroupSet:
            - !Ref BastionSecurityGroup
          AssociatePublicIpAddress: 'true'
      Tags:
        - Key: 'Name'
          Value: 'my-bastion-host'
  EKSCluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: my-eks-cluster
      RoleArn: !GetAtt EKSClusterRole.Arn
      Version: '1.21'
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref EKSClusterSG
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSub
